
Epoch: 0
  0%|          | 0/19 [00:00<?, ?it/s]C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\torchvision\transforms\functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
  0%|          | 0/19 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "C:\Users\Muhammad Talha Imran\PycharmProjects\CV_Assignment_3\U_net.py", line 94, in <module>
    train_loss, train_accuracy, train_classification_loss, train_dice_loss, train_dice_score, train_iou = run_epoch(
  File "C:\Users\Muhammad Talha Imran\PycharmProjects\CV_Assignment_3\HelperFunctions.py", line 98, in run_epoch
    loss.backward()
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\torch\_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\torch\autograd\__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn
<built-in method type of Tensor object at 0x0000027675608900> <built-in method type of Tensor object at 0x0000027675656AE0>
tensor(5191.3809, device='cuda:0') torch.Size([])