  0%|          | 0/10 [00:00<?, ?it/s]C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\torchvision\transforms\functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
Epoch: 0
tensor(2.6400, device='cuda:0') tensor(-2.1179, device='cuda:0')
  0%|          | 0/10 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2022.3.2\plugins\python-ce\helpers\pydev\pydevd.py", line 1496, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2022.3.2\plugins\python-ce\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "C:\Users\Muhammad Talha Imran\PycharmProjects\CV_Assignment_3\U_net.py", line 95, in <module>
    train_loss, train_accuracy, train_classification_loss, train_dice_loss, train_dice_score, train_iou = run_epoch(
  File "C:\Users\Muhammad Talha Imran\PycharmProjects\CV_Assignment_3\HelperFunctions.py", line 91, in run_epoch
    plt.imshow(predicted_masks[0,:,:])
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\matplotlib\_api\deprecation.py", line 456, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\matplotlib\pyplot.py", line 2640, in imshow
    __ret = gca().imshow(
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\matplotlib\_api\deprecation.py", line 456, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\matplotlib\__init__.py", line 1412, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\matplotlib\axes\_axes.py", line 5488, in imshow
    im.set_data(X)
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\matplotlib\image.py", line 702, in set_data
    self._A = cbook.safe_masked_invalid(A, copy=True)
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\matplotlib\cbook\__init__.py", line 701, in safe_masked_invalid
    x = np.array(x, subok=True, copy=copy)
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\torch\_tensor.py", line 970, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
torch.Size([32, 224, 224])
Backend QtAgg is interactive backend. Turning interactive mode on.