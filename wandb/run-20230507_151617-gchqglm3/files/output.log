  0%|          | 0/19 [00:00<?, ?it/s]C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\torchvision\transforms\functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
Epoch: 0
  0%|          | 0/19 [00:05<?, ?it/s]
Traceback (most recent call last):
  File "C:\Users\Muhammad Talha Imran\PycharmProjects\CV_Assignment_3\U_net.py", line 94, in <module>
    train_loss, train_accuracy, train_classification_loss, train_dice_loss, train_dice_score, train_iou = run_epoch(
  File "C:\Users\Muhammad Talha Imran\PycharmProjects\CV_Assignment_3\HelperFunctions.py", line 94, in run_epoch
    dice_loss = compute_dice_loss(predicted_masks, masks)
  File "C:\Users\Muhammad Talha Imran\PycharmProjects\CV_Assignment_3\HelperFunctions.py", line 24, in compute_dice_loss
    img1 = np.asarray(predicted_mask).astype(np.bool)
  File "C:\Users\Muhammad Talha Imran\anaconda3\envs\py_3\lib\site-packages\torch\_tensor.py", line 970, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.